import{_ as s,c as a,o as n,N as o}from"./chunks/framework.4bc264fe.js";const F=JSON.parse('{"title":"tsx","description":"","frontmatter":{"title":"tsx"},"headers":[],"relativePath":"lib/tsx/index.md","lastUpdated":1678861490000}'),l={name:"lib/tsx/index.md"},p=o(`<p><a href="https://github.com/esbuild-kit/tsx" target="_blank" rel="noreferrer">https://github.com/esbuild-kit/tsx</a></p><p>TSX的优点：</p><ol><li><p>超快的按需 TypeScript 和 ESM 编译</p></li><li><p>支持 <code>watch mode</code> 🎉；而 <code>ts-node</code> 是不支持的，只能借助 <code>nodemon</code></p></li><li><p>适用于 CommonJS 和 ESM 包</p></li><li><p>支持下一代 TypeScript 扩展 （ <code>.cts</code> &amp; <code>.mts</code> ）</p></li><li><p>支持 <code>node:</code> 前缀的导入当时（<code>import fs from &#39;node:fs&#39;</code>）</p></li><li><p>TypeScript REPL😎（直接在terminal中输入 <code>tsx</code>，然后并可以进入REPL界面了）</p></li><li><p>能够解析tsconfig.json中配置的 <code>paths</code>，即路径映射，比如</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// tsconfig.json</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">baseUrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">paths</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">@utils/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/utils/*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>然后在模块中使用：</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">add</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@utils/math</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p><code>tsx</code> 能对其进行解析，而 <code>ts-node</code> 是不支持的。</p></li><li><p>tsx还支持对 <code>i<wbr>mport.meta.url </code>(ES2020特性) 进行shim（注释：ESM -&gt; CJS时进行shim）；而 <code>ts-node</code> 直接报错</p></li></ol><p>关于它和 <code>ts-node</code> 的运行时对比：</p><ul><li><a href="https://github.com/privatenumber/ts-runtime-comparison" target="_blank" rel="noreferrer">TS runtime comparison</a></li><li>个人感觉全面碾压ts-node</li></ul><h2 id="tricks" tabindex="-1">Tricks <a class="header-anchor" href="#tricks" aria-label="Permalink to &quot;Tricks&quot;">​</a></h2><p>使用 <code>tsx</code> 监听文件的更改：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">tsx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./src/index.ts</span></span>
<span class="line"></span></code></pre></div><p>等价于使用 <code>nodemon</code>:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># -x == --exec 表示执行某个命令</span></span>
<span class="line"><span style="color:#FFCB6B;">nodemon</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tsx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./src/index.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 如果使用 ts-node</span></span>
<span class="line"><span style="color:#FFCB6B;">nodemon</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ts-node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./src/index.ts</span></span>
<span class="line"></span></code></pre></div>`,10),e=[p];function t(c,r,i,D,d,y){return n(),a("div",null,e)}const A=s(l,[["render",t]]);export{F as __pageData,A as default};
