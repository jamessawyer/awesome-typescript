import{_ as t,c as e,o,b as i}from"./app.185cda03.js";const h=JSON.parse('{"title":"tsconfig.json","description":"","frontmatter":{"title":"tsconfig.json"},"headers":[],"relativePath":"ts/tsconfig/index.md","lastUpdated":1678341486000}'),n={name:"ts/tsconfig/index.md"},s=i('<p>包含 <code>TSConfig</code> 的目录表示该目录是TS或JS项目的根目录。TSConfig文件既可以是 <code>tsconfig.json</code>，也可以是 <code>jsconfig.json</code>，它们都拥有相同的配置变量。</p><p>本文将介绍所有TSConfig文件的配置项。超过了 <code>100</code> 个配置项😅 ，可以将配置项分为5大板块：</p><ol><li>所有编译器标志的分类概述</li><li><a href="./root/index.html">root fields</a> （根字段）让TS知道哪些文件可以是可以访问到的</li><li><a href="./compiler/index.html">compiler options</a> (编译选型)字段，是整个文档的主体部分</li><li><a href="./watch/index.html">watch options</a> （监听选型）字段，用于调整监听模式</li><li><a href="./type-acquisition/index.html">type acquisition</a> （类型识别）字段，用于调整类型添加到JavaScript项目的方式</li></ol><p>如果你从头开始TSConfig，你可能需要使用 <code>tsc --init</code> 初始化一个 <code>tsconfig.json</code> 配置，或者使用 <a href="https://github.com/tsconfig/bases#centralized-recommendations-for-tsconfig-bases" target="_blank" rel="noreferrer">tsconfig bases</a></p><p>原文链接：</p><ul><li><a href="https://www.typescriptlang.org/tsconfig#JavaScript_Support_6247" target="_blank" rel="noreferrer">tsconfig - typescriptlang.org</a></li></ul>',6),c=[s];function a(r,l,d,p,f,_){return o(),e("div",null,c)}const m=t(n,[["render",a]]);export{h as __pageData,m as default};
