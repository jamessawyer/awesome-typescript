import{_ as s,c as a,o as n,b as l}from"./app.69ace8b7.js";const F=JSON.parse('{"title":"tsup tool","description":"","frontmatter":{"title":"tsup tool"},"headers":[{"level":2,"title":"tsup能打包什么？","slug":"tsup能打包什么","link":"#tsup能打包什么","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"打包文件","slug":"打包文件","link":"#打包文件","children":[]},{"level":2,"title":"排除packages","slug":"排除packages","link":"#排除packages","children":[]},{"level":2,"title":"排除所有的packages","slug":"排除所有的packages","link":"#排除所有的packages","children":[]},{"level":2,"title":"使用自定义配置","slug":"使用自定义配置","link":"#使用自定义配置","children":[{"level":3,"title":"TypeScript/JavaScript","slug":"typescript-javascript","link":"#typescript-javascript","children":[]},{"level":3,"title":"条件配置","slug":"条件配置","link":"#条件配置","children":[]},{"level":3,"title":"package.json","slug":"package-json","link":"#package-json","children":[]},{"level":3,"title":"JSON Schema Store","slug":"json-schema-store","link":"#json-schema-store","children":[]}]},{"level":2,"title":"多入口","slug":"多入口","link":"#多入口","children":[]},{"level":2,"title":"生成声明文件(.d.ts)","slug":"生成声明文件-d-ts","link":"#生成声明文件-d-ts","children":[{"level":3,"title":"只生成声明文件","slug":"只生成声明文件","link":"#只生成声明文件","children":[]},{"level":3,"title":"生成ts声明maps(.d.ts.map)","slug":"生成ts声明maps-d-ts-map","link":"#生成ts声明maps-d-ts-map","children":[]}]},{"level":2,"title":"生成Sourcemap文件","slug":"生成sourcemap文件","link":"#生成sourcemap文件","children":[]},{"level":2,"title":"打包格式","slug":"打包格式","link":"#打包格式","children":[]},{"level":2,"title":"输出扩展","slug":"输出扩展","link":"#输出扩展","children":[]},{"level":2,"title":"代码拆分","slug":"代码拆分","link":"#代码拆分","children":[]},{"level":2,"title":"目标环境","slug":"目标环境","link":"#目标环境","children":[{"level":3,"title":"ES5支持","slug":"es5支持","link":"#es5支持","children":[]}]},{"level":2,"title":"编译时环境变量","slug":"编译时环境变量","link":"#编译时环境变量","children":[]},{"level":2,"title":"构建CLI App","slug":"构建cli-app","link":"#构建cli-app","children":[]},{"level":2,"title":"观察模式","slug":"观察模式","link":"#观察模式","children":[]},{"level":2,"title":"onSuccess","slug":"onsuccess","link":"#onsuccess","children":[]},{"level":2,"title":"压缩输出文件","slug":"压缩输出文件","link":"#压缩输出文件","children":[]},{"level":2,"title":"自定义Loader","slug":"自定义loader","link":"#自定义loader","children":[]},{"level":2,"title":"Tree Shaking","slug":"tree-shaking","link":"#tree-shaking","children":[]},{"level":2,"title":"类型检测呢？","slug":"类型检测呢","link":"#类型检测呢","children":[]},{"level":2,"title":"CSS支持","slug":"css支持","link":"#css支持","children":[]},{"level":2,"title":"Metafile","slug":"metafile","link":"#metafile","children":[]},{"level":2,"title":"自定义esbuild插件和配置项","slug":"自定义esbuild插件和配置项","link":"#自定义esbuild插件和配置项","children":[]},{"level":2,"title":"注入cjs和esm shims","slug":"注入cjs和esm-shims","link":"#注入cjs和esm-shims","children":[]},{"level":2,"title":"拷贝文件到输出目录","slug":"拷贝文件到输出目录","link":"#拷贝文件到输出目录","children":[]},{"level":2,"title":"故障排除","slug":"故障排除","link":"#故障排除","children":[{"level":3,"title":"error: No matching export in \\"xxx.ts\\" for import \\"xxx\\"","slug":"error-no-matching-export-in-xxx-ts-for-import-xxx","link":"#error-no-matching-export-in-xxx-ts-for-import-xxx","children":[]}]}],"relativePath":"lib/tsup/index.md","lastUpdated":1677750048000}'),p={name:"lib/tsup/index.md"},e=l(`<p>无配置打包TypeScript Library，<a href="https://github.com/evanw/esbuild" target="_blank" rel="noreferrer">esbuild</a>加持😎。</p><h2 id="tsup能打包什么" tabindex="-1">tsup能打包什么？ <a class="header-anchor" href="#tsup能打包什么" aria-hidden="true">#</a></h2><p>Node.js原生支持什么，它就支持什么，即 <code>.js</code> &amp; <code>.json</code> &amp; <code>.mjs</code>。以及TypeScript <code>.ts</code> &amp; <code>.tsx</code>，以及 <a href="#css%E6%94%AF%E6%8C%81">CSS实验性的支持</a>。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h2><p>可以局部安装(推荐👍)</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># npm | yarn | pnpm</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span>
<span class="line"></span></code></pre></div><p>或者全局安装也可以，但不推荐</p><h1 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-hidden="true">#</a></h1><h2 id="打包文件" tabindex="-1">打包文件 <a class="header-anchor" href="#打包文件" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">...files</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>文件将写入到 <code>./dist</code> 目录下。</p><p>也可以一次性打包多个文件：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/cli.ts</span></span>
<span class="line"></span></code></pre></div><p>这会输出 <code>dist/index.js</code> 和 <code>dist/cli.js</code>。</p><h2 id="排除packages" tabindex="-1">排除packages <a class="header-anchor" href="#排除packages" aria-hidden="true">#</a></h2><p>默认情况下，tsup会将 <code>package.json</code> 中 <code>dependencies</code> &amp; <code>peerDependencies</code> 之外的所有 <code>import</code> 模块都进行打包。你也可以使用 <code>--external &lt;module|pkgJson&gt;</code> 标志将某个模块或者 <code>package.json</code> 中的某个 <code>dependencies</code> &amp; <code>peerDependencies</code> 标记为 <code>外部的（external）</code>。</p><h2 id="排除所有的packages" tabindex="-1">排除所有的packages <a class="header-anchor" href="#排除所有的packages" aria-hidden="true">#</a></h2><p>如果你使用tsup构建Node.js应用或APIs，这种情形对依赖进行打包通常是不需要的，甚至还可能导致错误，比如，输出为 <a href="https://nodejs.org/api/esm.html" target="_blank" rel="noreferrer">ESM</a> 时。</p><p>tsup会自动排除 <code>package.json</code> 中的 <code>dependencies</code> &amp; <code>peerDependencies</code> packages，但是它不会排除某些packages，tsup这个库还有一个特殊的 <code>tsup-node</code> 命令，用于自动跳过对Node.js package的打包。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup-node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span></span>
<span class="line"></span></code></pre></div><p>tsup其它的参数也适用于tsup-node。你仍旧可以使用 <code>noExternal</code> 配置项重新包含某个package到bundle中，例如，属于本地monorepo的某些packages。</p><p>如果常规的tsup命令还满足不了你，可以给我们提issue。</p><h2 id="使用自定义配置" tabindex="-1">使用自定义配置 <a class="header-anchor" href="#使用自定义配置" aria-hidden="true">#</a></h2><p>你可以使用文件配置形式或者在 <code>package.json</code> 中定义 <code>tsup</code> 字段的形式，甚至TypeScript的方式使用它。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>大多数配置都可以被CLI覆写。</p></div><p>你可以使用如下这些文件：</p><ul><li><code>tsup.config.ts</code></li><li><code>tsup.config.js</code></li><li><code>tsup.config.cjs</code></li><li><code>tsup.config.json</code></li><li><code>package.json</code> 中定义 <code>tsup</code> 属性</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>所有这些配置文件中，都可以将配置项作为 <code>tsup</code> , <code>default</code> 或者 <code>module.exports = </code> 进行导出。</p></div><p>你可以使用 <code>--config</code> 指定自定义文件名，或者通过 <code>--no-config</code> 禁用配置文件。</p><ul><li><a href="https://paka.dev/npm/tsup@6.6.3/api#module-index-export-Options" target="_blank" rel="noreferrer">🚀参看所有配置项</a></li></ul><h3 id="typescript-javascript" tabindex="-1">TypeScript/JavaScript <a class="header-anchor" href="#typescript-javascript" aria-hidden="true">#</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">splitting</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">sourcemap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">clean</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="条件配置" tabindex="-1">条件配置 <a class="header-anchor" href="#条件配置" aria-hidden="true">#</a></h3><p>如果配置需要基于CLI flags进行条件性的确定，它可以导出一个函数的形式：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    minify</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">watch</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>这里的 <code>options</code> 派生自CLI flags。</p><h3 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-hidden="true">#</a></h3><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">tsup</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">entry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">splitting</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">sourcemap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">clean</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="json-schema-store" tabindex="-1">JSON Schema Store <a class="header-anchor" href="#json-schema-store" aria-hidden="true">#</a></h3><p>略</p><h2 id="多入口" tabindex="-1">多入口 <a class="header-anchor" href="#多入口" aria-hidden="true">#</a></h2><p>除了使用 <code>tsup [...files]</code> 位置参数指定多入口，你还可以使用CLI标志 <code>--entry</code>:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 输出为 \`dist/a.js\` &amp; \`dist/b.js\`</span></span>
<span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--entry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/a.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--entry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/b.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出为 \`dist/foo.js\` &amp; \`dist/bar.js\` 🎉</span></span>
<span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--entry.foo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/a.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--entry.bar</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/b.ts</span></span>
<span class="line"></span></code></pre></div><p>这相当于下面配置：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-H9UEL" id="tab-OPmCKsF" checked="checked"><label for="tab-OPmCKsF">tsup.config.ts</label></div><div class="blocks"><div class="language-typescript active"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 输出为 \`dist/a.js\` &amp; \`dist/b.js\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/a.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/b.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 输出为 \`dist/foo.js\` &amp; \`dist/bar.js\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/a.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">bar</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/b.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="生成声明文件-d-ts" tabindex="-1">生成声明文件(.d.ts) <a class="header-anchor" href="#生成声明文件-d-ts" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dts</span></span>
<span class="line"></span></code></pre></div><p>这会生成 <code>./dist/index.js</code> 和 <code>./dist/index.d.ts</code> 文件。</p><p>如果你有多个入口，则也会生成相应的 <code>.d.ts</code> 文件。因此，如果你只想给某个入口生成声明文件，则可以使用 <code>--dts &lt;entry&gt;</code> 的格式，比如 <code>--dts src/index.ts</code>。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>🚨 <code>--dts</code> 并不会解析在 <code>.d.ts</code>中使用到的外部类型（即node_modules中的types）。如果这是你的一个需求，则可以使用 <code>--dts-resolve</code> 这个实验性的flag。</p></div><h3 id="只生成声明文件" tabindex="-1">只生成声明文件 <a class="header-anchor" href="#只生成声明文件" aria-hidden="true">#</a></h3><p><code>--dts-only</code> 标志相当于 <code>tsc</code> 中的 <code>emitDeclarationOnly</code>。使用这个标志将只生成声明文件，而不包含js文件。</p><h3 id="生成ts声明maps-d-ts-map" tabindex="-1">生成ts声明maps(.d.ts.map) <a class="header-anchor" href="#生成ts声明maps-d-ts-map" aria-hidden="true">#</a></h3><p>TS声明maps主要用于在monorepo上下文中快速跳转到类型定义。（查看 <a href="https://github.com/Microsoft/TypeScript/issues/14479" target="_blank" rel="noreferrer">source issue</a> 和 <a href="https://www.typescriptlang.org/tsconfig/#declarationMap" target="_blank" rel="noreferrer">typescrip#declarationMap官方文档</a>）。</p><p>它们不应该被包含在发布的npm包中，也不应该可sourcemaps产生混淆。</p><p><a href="https://github.com/egoist/tsup/issues/564" target="_blank" rel="noreferrer">Tsup并没有能力生成这些文件</a>。相反，你应该直接使用TypeScript编译器，在构建完成后通过 <code>tsc --emitDeclarationOnly --declaration</code> 命令行达到这一目标。</p><p>你也可以将这个命令行与Tsup的 <a href="#onsuccess">onSuccess</a> 回调结合起来使用。</p><h2 id="生成sourcemap文件" tabindex="-1">生成Sourcemap文件 <a class="header-anchor" href="#生成sourcemap文件" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--sourcemap</span></span>
<span class="line"></span></code></pre></div><p>这将会生成 <code>dist/index.js</code> &amp; <code>dist/index.js.map</code> 文件。</p><p>你可以设置多入口，这也将生成对应的 <code>.map</code> 文件。</p><p>如果你喜欢内联sourcemap，可以使用：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--sourcemap</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">inline</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>🚨内联sourcemap只能用于开发，比如开发一个浏览器扩展，此时访问 <code>.map</code> 文件是不允许的。不推荐在生成中使用内联的方式。</p><p>sourcemap在 <code>--dts</code> 构建中是不支持的，这一点要注意😅。</p></div><h2 id="打包格式" tabindex="-1">打包格式 <a class="header-anchor" href="#打包格式" aria-hidden="true">#</a></h2><p>支持格式：</p><ul><li>esm</li><li>cjs (默认)</li><li>iife</li></ul><p>你可以一次性打包多种格式：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--format</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">esm,cjs,iife</span></span>
<span class="line"></span></code></pre></div><p>这对生成如下文件夹结构：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dist</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.mjs</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># esm</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.global.js</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># iife</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># cjs</span></span>
<span class="line"></span></code></pre></div><p>如果在 <code>package.json</code> 中设置了 <code>type = &quot;module&quot;</code> ，则文件名将稍微有所不同：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dist</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># esm</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.global.js</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># iife</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.cjs</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># cjs</span></span>
<span class="line"></span></code></pre></div><ul><li><a href="https://nodejs.org/api/esm.html#esm_enabling" target="_blank" rel="noreferrer">了解更多esm在Node.js中的支持</a></li></ul><p>如果你不想要 <code>.mjs</code> 或 <code>.cjs</code> 扩展。如果你想你的library被用在某个不支持这些扩展的bundler（或环境）中，你可以使用 <code>--legacy-output</code> 标志：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--format</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">esm,cjs,iife</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--legacy-output</span></span>
<span class="line"></span></code></pre></div><p>输出格式为：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dist</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">esm</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">iife</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span></span>
<span class="line"></span></code></pre></div><h2 id="输出扩展" tabindex="-1">输出扩展 <a class="header-anchor" href="#输出扩展" aria-hidden="true">#</a></h2><p>你还可以通过 <code>outExtension</code> 配置改变输出文件的扩展：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">outExtension</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">format</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      js</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">format</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.js</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>生成文件格式将变为 <code>[name].[format].js</code>。</p><p><code>outExtension</code> 函数签名：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OutExtension</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Context</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Result</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Context</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">NormalizedOptions</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">format</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Format</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/** &quot;type&quot; field in project&#39;s package.json */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">pkgType</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Result</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">js</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="代码拆分" tabindex="-1">代码拆分 <a class="header-anchor" href="#代码拆分" aria-hidden="true">#</a></h2><p>目前代码拆分只对 <code>esm</code> 输出格式有效，并且默认是开启的。如果你想对 <code>cjs</code> 输出格式也进行代码拆分，可以使用 <code>--splitting</code> 这个实验性功能，以摆脱 <a href="https://esbuild.github.io/api/#splitting" target="_blank" rel="noreferrer">esbuild</a> 的限制。</p><p>如果想禁用代码拆分，可使用 <code>--no-splitting</code> 标志。</p><h2 id="目标环境" tabindex="-1">目标环境 <a class="header-anchor" href="#目标环境" aria-hidden="true">#</a></h2><p>你可以在 <code>tsup.config.ts</code> 中使用 <code>target</code> 配置项或者 <code>--target</code> 标志对生成的js或者CSS代码设置目标环境。每个目标环境就是环境名+版本号。下面是目前所支持的目标环境名：</p><ul><li>chrome</li><li>edge</li><li>firfox</li><li>hermes</li><li>ie</li><li>ios</li><li>node</li><li>opera</li><li>rhino</li><li>safari</li></ul><p>另外，你还可以设置JS语言版本，比如 <code>es2020</code>。</p><p><code>target</code>值默认是 <code>tsconfig.json</code> 中的 <code>compilerOptions.target</code> 值,如果没有在tsconfig.json中指定，则默认是 <code>node14</code>。</p><ul><li><a href="https://esbuild.github.io/api/#target" target="_blank" rel="noreferrer">esbuild#target配置项</a> 了解更多</li></ul><h3 id="es5支持" tabindex="-1">ES5支持 <a class="header-anchor" href="#es5支持" aria-hidden="true">#</a></h3><p>可以使用 <code>--target es5</code> 将代码编译为ES5，使用这个目标，代码将先通过esbuild转义为es2020，然后通过 <a href="https://swc.rs/" target="_blank" rel="noreferrer">swc</a> 转义为es5。</p><h2 id="编译时环境变量" tabindex="-1">编译时环境变量 <a class="header-anchor" href="#编译时环境变量" aria-hidden="true">#</a></h2><p>你可以使用 <code>--env</code> 设置编译时环境变量：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--env.NODE_ENV</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">production</span></span>
<span class="line"></span></code></pre></div><h2 id="构建cli-app" tabindex="-1">构建CLI App <a class="header-anchor" href="#构建cli-app" aria-hidden="true">#</a></h2><p>当你的入口文件类似包含了hashbang <code>#!/bin/env node</code>的<code>src/cli.ts</code>时，tsup将自动将输出文件变为可执行文件（executable），因此你无需使用 <code>chmod +x dist/cli.js</code> 进行授权。</p><h2 id="观察模式" tabindex="-1">观察模式 <a class="header-anchor" href="#观察模式" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--watch</span></span>
<span class="line"></span></code></pre></div><p>开启观察模式。这意味着，在初次构建之后，tsup将持续观察任何解析文件的变化。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>默认情况下，总是会忽略对 <code>node_modules</code> &amp; <code>.git</code> &amp; <code>dist</code> 的观察</p></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--ignore-watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ignore-this-folder-too</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>你可以重复 <code>--ignore-watch</code> 指定多个文件夹，忽略观察。比如</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--ignore-watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">folder1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--ignore-watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">folder2</span></span>
<span class="line"></span></code></pre></div></div><h2 id="onsuccess" tabindex="-1">onSuccess <a class="header-anchor" href="#onsuccess" aria-hidden="true">#</a></h2><p>你可以指定某个命令在成功构建之后执行，这对 <a href="#%E8%A7%82%E5%AF%9F%E6%A8%A1%E5%BC%8F">watch</a> 模式很有用。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--onSuccess</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node dist/index.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p><code>onSuccess</code> 也可以是一个返回Promise的函数。要使用函数，则需要使用 <code>tsup.config.ts</code> 配置的形式：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">onSuccess</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Start some long running task</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Like a server</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>你也可以在onSuccess中返回一个清理函数：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">onSuccess</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">server</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">http</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createServer</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">end</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3000</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="压缩输出文件" tabindex="-1">压缩输出文件 <a class="header-anchor" href="#压缩输出文件" aria-hidden="true">#</a></h2><p>可以使用 <code>--minify</code> 压缩输出文件，减小打包尺寸：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--minify</span></span>
<span class="line"></span></code></pre></div><p>要使用 <a href="https://github.com/terser/terser" target="_blank" rel="noreferrer">Tserser</a> 压缩，而不是esbuild，则传递 <code>terser</code> 参数：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--minify</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">terser</span></span>
<span class="line"></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>你必须先安装 <code>terser</code>:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">terser</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span>
<span class="line"></span></code></pre></div></div><p>在 <code>tsup.config.js</code> 中，你可以传递 <code>terserOptions</code>，它将传递给 <code>terser.minify</code>。</p><h2 id="自定义loader" tabindex="-1">自定义Loader <a class="header-anchor" href="#自定义loader" aria-hidden="true">#</a></h2><p>Esbuild Loader列表：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Loader</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">js</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jsx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">css</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">base64</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dataurl</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">binary</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">copy</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>通过CLI使用自定义Loader:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--loader</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.jpe=base64</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--loader</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.webp=file</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>或通过 <code>tsup.config.js</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">loader</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">.jpg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">base64</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">.webp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="tree-shaking" tabindex="-1">Tree Shaking <a class="header-anchor" href="#tree-shaking" aria-hidden="true">#</a></h2><p>esbuild默认开启 <a href="https://esbuild.github.io/api/#tree-shaking" target="_blank" rel="noreferrer">Tree shaking</a>，但是优势效果可能不太理想，查看</p><ul><li><a href="https://github.com/evanw/esbuild/issues/1794" target="_blank" rel="noreferrer">esbuild issuse#1794</a></li><li><a href="https://github.com/evanw/esbuild/issues/1435" target="_blank" rel="noreferrer">esbuild issuse#1435</a></li></ul><p>为此，tsup给你提供了另外的配置，允许你使用Rollup进行tree shaking:😎</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--treeshake</span></span>
<span class="line"></span></code></pre></div><p>这个标识将开启Rollup Tree shaking，相当于 <code>tsup.config.js</code> ：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">treeshake</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>这个配置项和Rollup中的 <code>treeshake</code> 配置项类型一样：</p><ul><li><a href="https://rollupjs.org/configuration-options/#treeshake" target="_blank" rel="noreferrer">Rollup#treeshake</a></li></ul><h2 id="类型检测呢" tabindex="-1">类型检测呢？ <a class="header-anchor" href="#类型检测呢" aria-hidden="true">#</a></h2><p>esbuild之所以这么快，是因为它不执行类型检测😅，你已经通过IDE（vscode | webstorm）获取了类型检测。</p><p>另外，如果你想在构建时执行类型检测，你可以开启 <code>--dts</code>，它将运行真正的TypeScript编译器，用于生成d.ts文件，同时获得类型检测的作用。</p><h2 id="css支持" tabindex="-1">CSS支持 <a class="header-anchor" href="#css支持" aria-hidden="true">#</a></h2><p>esbuild有 <a href="https://esbuild.github.io/content-types/#css" target="_blank" rel="noreferrer">CSS实验性支持</a>，并且tsup允许你在原生CSS支持的基础之上使用PostCSS插件。</p><p>为了使用PostCSS，需先安装它：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">postcss</span></span>
<span class="line"></span></code></pre></div><p>然后在项目中添加一个 <code>postcss.config.js</code> 文件：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-ak1ho" id="tab-D0-B9DW" checked="checked"><label for="tab-D0-B9DW">postcss.config.js</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tailwindcss</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">autoprefixer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)()</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="metafile" tabindex="-1">Metafile <a class="header-anchor" href="#metafile" aria-hidden="true">#</a></h2><p>使用 <code>--matefile</code> 标志告诉esbuild对构建产物生成一个json格式的元数据文件。你可以将这个文件投喂给 <a href="https://www.bundle-buddy.com/esbuild" target="_blank" rel="noreferrer">bundle buddy</a> 这样的分析工具，用于可视化bundle中的模块，以及每个模块占据多少空间。</p><p>这个文件输出格式为 <code>metafile-{format}.json</code> 比如 <code>tsup --format cjs.esm</code> 将生成 <code>metafile-cjs.json</code> 和 <code>metafile-esm.json</code> 文件。</p><h2 id="自定义esbuild插件和配置项" tabindex="-1">自定义esbuild插件和配置项 <a class="header-anchor" href="#自定义esbuild插件和配置项" aria-hidden="true">#</a></h2><p>在tsup.config.ts中使用 <code>esbuildPlugins</code> &amp; <code>esbuildOptions</code>:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">esbuildPlugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [YourPlugin]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">esbuildOptions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">context</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">define</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">foo</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&quot;bar&quot;</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p><code>esbuildOptions</code> 中的 <code>context</code> 参数：</p><ul><li><code>context.format</code> : cjs, esm, iife</li></ul><p>更多可参考：</p><ul><li><p><a href="https://esbuild.github.io/api/#build-api" target="_blank" rel="noreferrer">esbuild#build-api</a></p></li><li><p><a href="https://esbuild.github.io/plugins/#using-plugins" target="_blank" rel="noreferrer">如何写一个esbuild插件</a></p></li></ul><p>更多细节：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--help</span></span>
<span class="line"></span></code></pre></div><h2 id="注入cjs和esm-shims" tabindex="-1">注入cjs和esm shims <a class="header-anchor" href="#注入cjs和esm-shims" aria-hidden="true">#</a></h2><p>开启这个配置项，当构建cjs/esm时，为了使产物生效，将填充某些代码，比如 <code>__dirname</code> 只存在于cjs中，而 <code>i<wbr>mport.meta.url</code> 只存在于esm中。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tsup</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">shims</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><ul><li><p>当打包<code>cjs</code>格式时，会将 <code>i<wbr>mport.meta.url</code> 编译为：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> getImportMetaUrl </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> document </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">file:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> __filename)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href </span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">currentScript </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">currentScript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    		</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">baseURI)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> importMetaUrl </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* @__PURE__ */</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getImportMetaUrl</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div></li><li><p>当打包为<code>esm</code>格式时，会将 <code>__dirname</code> 编译为：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dirname</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">fileURLToPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url))</span></span>
<span class="line"></span></code></pre></div></li></ul><h2 id="拷贝文件到输出目录" tabindex="-1">拷贝文件到输出目录 <a class="header-anchor" href="#拷贝文件到输出目录" aria-hidden="true">#</a></h2><p>使用 <code>--publicDir</code> 将 <code>./public</code> 目录下的文件拷贝到输出目录。</p><p>你也可以使用自定义文件目录：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tsup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src/index.ts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--publicDir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">another-directory</span></span>
<span class="line"></span></code></pre></div><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-hidden="true">#</a></h2><h3 id="error-no-matching-export-in-xxx-ts-for-import-xxx" tabindex="-1">error: No matching export in &quot;xxx.ts&quot; for import &quot;xxx&quot; <a class="header-anchor" href="#error-no-matching-export-in-xxx-ts-for-import-xxx" aria-hidden="true">#</a></h3><p>出现这个错误，通常是你在 <code>tsconfig.json</code> 中开启了 <code>emitDecoratorMetadata</code> 配置项，在此模式下，我们使用 <a href="https://swc.rs/" target="_blank" rel="noreferrer">SWC</a> 将装饰器转义为js，因此导出的类型被消除了，这也是esbuild找不到相应导出的原因。你可以通过改变导入语句的方式修复这个问题。</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 出错导入</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SomeType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 修改为</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SomeType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 或者</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SomeType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>文档地址：</p><ul><li><a href="https://tsup.egoist.dev/" target="_blank" rel="noreferrer">tsup</a></li></ul><p>翻译版本： <code>tsup@v6.6.3</code></p><p>2023年02月21日15:46:48</p>`,173),o=[e];function t(c,r,i,y,D,C){return n(),a("div",null,o)}const A=s(p,[["render",t]]);export{F as __pageData,A as default};
