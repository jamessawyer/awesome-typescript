import{_ as s,c as a,o as l,N as n}from"./chunks/framework.90b54eba.js";const C=JSON.parse('{"title":"js support","description":"","frontmatter":{"title":"js support"},"headers":[],"relativePath":"ts/tsconfig/compiler/js-support.md","lastUpdated":1679279862000}'),o={name:"ts/tsconfig/compiler/js-support.md"},p=n(`<nav class="table-of-contents"><ul><li><a href="#allowjs-👍">allowJs 👍</a></li><li><a href="#checkjs">checkJs</a></li><li><a href="#maxnodemodulejsdepth">maxNodeModuleJsDepth</a></li></ul></nav><h2 id="allowjs-👍" tabindex="-1"><code>allowJs</code> 👍 <a class="header-anchor" href="#allowjs-👍" aria-label="Permalink to &quot;\`allowJs\` 👍&quot;">​</a></h2><p>允许js文件在项目中被导入，而不仅仅是 <code>.ts</code> 和 <code>.tsx</code> 文件。</p><p>比如，下面JS文件：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// @filename: card.js</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> defaultCardDeck </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Heart</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>当导入到TS文件中时会引发错误：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// @filename index.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defaultCardDeck</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./card</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(defaultCardDeck)</span></span>
<span class="line"></span></code></pre></div><p>开启 <code>allowJs</code> 再引入就没什么问题：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">allowJs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这个配置用于逐步添加TS文件到JS项目中，允许 <code>.ts</code> &amp; <code>.tsx</code> 与 js文件共存。</p><div class="tip custom-block"><p class="custom-block-title">💡</p><p>相关联配置：</p><ul><li><a href="#checkjs">checkJs</a></li><li><a href="./emit.html#emitdeclarationonly-👍-只生成声明文件">emitDeclarationOnly</a></li></ul></div><h2 id="checkjs" tabindex="-1"><code>checkJs</code> <a class="header-anchor" href="#checkjs" aria-label="Permalink to &quot;\`checkJs\`&quot;">​</a></h2><p>与 <a href="#allowjs-👍">allowJs</a> 协同工作。当 <code>checkJs</code> 开启时，错误会在JS中也会触发。这相当于在项目中所有JS文件顶部包含了 <code>// @ts-check</code>：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// parseFloat 值接收一个字符串</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports.</span><span style="color:#A6ACCD;">pi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3.124</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>当导入到TS模块中：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// @filename: constants.js</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports.</span><span style="color:#A6ACCD;">pi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3.124</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// @filename: index.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pi</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./constants</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(pi)</span></span>
<span class="line"></span></code></pre></div><p>你不会得到任何错误。如果你开启了 <code>checkJs</code>，JS文件中也会得到错误信息：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">allowJs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">checkJs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>错误信息如下：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// @filename: constants.js</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">🚫 Argument </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> type </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> is not assignable to parameter </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> type </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports.</span><span style="color:#A6ACCD;">pi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3.124</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// @filename: index.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pi</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./constants</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(pi)</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">💡</p><p>相关联配置：</p><ul><li><a href="#allowjs-👍">allowJs</a></li><li><a href="./emit.html#emitdeclarationonly-👍-只生成声明文件">emitDeclarationOnly</a></li></ul></div><h2 id="maxnodemodulejsdepth" tabindex="-1"><code>maxNodeModuleJsDepth</code> <a class="header-anchor" href="#maxnodemodulejsdepth" aria-label="Permalink to &quot;\`maxNodeModuleJsDepth\`&quot;">​</a></h2><p>在<code>node_modules</code>下搜索和加载JavaScript文件的最大依赖深度。</p><p>这个配置只能在 <a href="#allowjs-👍">allowJs</a> 开启的情况下使用，如果你想让 TS 为你的 <code>node_modules</code> 中的所有JS推断类型，则使用它。</p><p>理想情况下，这应该保持为 <code>0</code>（默认值），并且应该使用 <code>d.ts</code> 文件来明确定义模块的形状。然而，你可能为了速度和可能的精确性开启这个配置。</p><p>原地址：</p><ul><li><a href="https://www.typescriptlang.org/tsconfig#JavaScript_Support_6247" target="_blank" rel="noreferrer">JavaScript Support</a></li></ul><p>2022年08月19日21:38:43</p>`,28),e=[p];function t(c,r,i,D,y,F){return l(),a("div",null,e)}const A=s(o,[["render",t]]);export{C as __pageData,A as default};
