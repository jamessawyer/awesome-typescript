import{_ as s,c as n,o as a,O as l}from"./chunks/framework.5e952531.js";const A=JSON.parse('{"title":"模块：插件","description":"","frontmatter":{"title":"模块：插件"},"headers":[],"relativePath":"ts/dfile/templates/modules-plugin.md","lastUpdated":1682407907000}'),p={name:"ts/dfile/templates/modules-plugin.md"},e=l(`<p>比如，当你想使用JS代码扩展另一个库时：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">greeter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">super-greeter</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 普通Greeter API</span></span>
<span class="line"><span style="color:#82AAFF;">greeter</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">greeter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 我们使用一个运行时的新函数扩展对象</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hyper-super-greeter</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">greeter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hyperGreet</span><span style="color:#A6ACCD;">()</span></span></code></pre></div><p><code>super-greeter</code> 定义：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*~ 这个示例展示了如何给你的函数添加多个重载 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GreeterFunction</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*~ 本示例展示如何导出接口指定的函数 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> greeter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GreeterFunction</span></span></code></pre></div><p>我们可以像下面一样扩展已有模块：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 对 [~THE LIBRARY NAME~] [~可选版本号~] 的类型定义</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Project: [~项目名~]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Definitions by: [~你的名字~] &lt;[~URL FOR YOU~]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*~ 💡这是一个模块插件模板文件. 你应该将它重命名为 index.d.ts</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *~ 并将它放在和模块同名的文件夹中</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *~ 例如, 如果你正在给 &quot;super-greeter&quot; 文件写类型声明</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *~ 则该文件应该是 &#39;super-greeter/index.d.ts&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*~ 在这一行，导入此模块添加到的模块 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">greeter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">super-greeter</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#676E95;font-style:italic;">/*~ 这里声明上面你导入的相同模块</span></span>
<span class="line highlighted"><span style="color:#676E95;font-style:italic;"> *~ 然后对已有 greeter 函数声明进行扩展</span></span>
<span class="line highlighted"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">module</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">super-greeter</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">GreeterFunction</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    hyperGreet</span><span style="color:#89DDFF;">():</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这使用到了 <a href="./../../reference/declaration-merging.html">声明合并</a> 😎。</p><h2 id="es6对模块插件的影响" tabindex="-1">ES6对模块插件的影响 <a class="header-anchor" href="#es6对模块插件的影响" aria-label="Permalink to &quot;ES6对模块插件的影响&quot;">​</a></h2><p>有些插件会在已有模块基础上，添加顶层导出或者修改顶层导出。这在CommonJS和其它loaders中是合法的，<code>ES6 模块被认为是不可变的，因此这种模式是不可能的</code>。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>因为TypeScript是加载器无关的，所以没有在编译时强制执行该策略，但是打算转换到ES6模块加载器的开发人员应该意识到这一点。</p></div><p>原文档：</p><ul><li><a href="https://www.typescriptlang.org/docs/handbook/declaration-files/templates/module-plugin-d-ts.html" target="_blank" rel="noreferrer">Module: Plugin</a></li></ul><p>2022年09月03日12:15:16</p>`,13),o=[e];function t(c,r,i,y,D,F){return a(),n("div",null,o)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
